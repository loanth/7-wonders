"use client"

import { useEffect, useState } from "react"
import { useRouter } from "next/navigation"
import { Button } from "@/components/ui/button"

export default function EnigmeChichenItzaPage() {
  const router = useRouter()
  const [dialogueIndex, setDialogueIndex] = useState(0)
  const [isDialogueFinished, setIsDialogueFinished] = useState(false)
  const [answer, setAnswer] = useState("")
  const [showQuiz, setShowQuiz] = useState(false)
  const [quizIndex, setQuizIndex] = useState(0)
  const [score, setScore] = useState(0)
  const [showCongrats, setShowCongrats] = useState(false)
  const [loading, setLoading] = useState(false)
  const [feedback, setFeedback] = useState<string | null>(null)
  const [postPhase, setPostPhase] = useState(false)
  const [postDialogueIndex, setPostDialogueIndex] = useState(0)
  const [showVideo, setShowVideo] = useState(false)

  const VIDEO_URL = "https://www.youtube.com/watch?v=ZxBuScr7hrk"

  const dialogues = [
    "Bienvenue √† Chichen Itza, voyageur du temps... Je m'appelle Pedro",
    "Ici, les Mayas observaient les √©toiles pour pr√©dire le futur et √©rigeaient leurs temples selon les astres.",
    "Devant toi se dresse le Temple de Kukulc√°n, le serpent √† plumes.",
    "Pour en percer le myst√®re, tu devras ouvrir un cadenas √† 4 chiffres...",
    "Les anciens utilisaient un syst√®me simple : quelques points... et des traits horizontaux qui valent bien plus.",
    "Observe les symboles grav√©s sur les pierres et trouve la combinaison cach√©e.",
  ]

  const correctAnswer = "4769"
  const symbols = [
    { id: 1, image: "https://i.imgur.com/TU2Bv0x.png", description: "Symbole de faible valeur" },
    { id: 2, image: "https://i.imgur.com/6S1v7xO.png", description: "Symbole de plus grande valeur" },
  ]

  const codedNumbers = [
    { maya: "‚Ä¢‚Ä¢‚Ä¢‚Ä¢" },
    { maya: "‚îÅ ‚Ä¢‚Ä¢" },
    { maya: "‚îÅ ‚Ä¢" },
    { maya: "‚îÅ ‚Ä¢‚Ä¢‚Ä¢‚Ä¢" },
  ]

  const postAnswerDialogues = [
    "Tu as trouv√© la bonne combinaison !",
    "Les chiffres mayas √©taient bien plus qu‚Äôun simple syst√®me de comptage : ils refl√©taient leur vision cosmique.",
    "Leur calendrier sacr√©, le Tzolk‚Äôin, guidait les rituels et les saisons.",
    "Chichen Itza √©tait un centre religieux et astronomique majeur.",
    "Le Temple de Kukulc√°n est con√ßu de sorte qu‚Äô√† chaque √©quinoxe, le serpent √† plumes semble descendre les marches...",
    "Une preuve du g√©nie des Mayas et de leur lien avec les cieux.",
    "Maintenant, montre que tu as bien retenu : place au quiz !",
  ]

  const quiz = [
    {
      question: "O√π se trouve Chichen Itza ?",
      options: ["P√©rou", "Mexique", "Guatemala", "Br√©sil"],
      correct: "Mexique",
    },
    {
      question: "Quel dieu est honor√© par la pyramide principale de Chichen Itza ?",
      options: ["Kukulc√°n", "Quetzalcoatl", "Itzamna", "Huitzilopochtli"],
      correct: "Kukulc√°n",
    },
    {
      question: "Combien de marches poss√®de la pyramide de Kukulc√°n au total (y compris la plate-forme) ?",
      options: ["364", "365", "366", "260"],
      correct: "365",
    },
    {
      question: "√Ä quoi servait Chichen Itza pour les Mayas ?",
      options: [
        "Un lieu de commerce uniquement",
        "Une cit√© religieuse et astronomique",
        "Une base militaire",
        "Un centre pour le jeu de balle uniquement",
      ],
      correct: "Une cit√© religieuse et astronomique",
    },
    {
      question: "Que repr√©sente le serpent visible pendant l‚Äô√©quinoxe ?",
      options: [
        "Le dieu Kukulc√°n descendant du ciel",
        "Un signe d‚Äô√©clipse",
        "Une d√©coration sans signification",
        "Une illusion d‚Äôoptique sans lien religieux",
      ],
      correct: "Le dieu Kukulc√°n descendant du ciel",
    },
  ]

  useEffect(() => {
    const handleNext = (e: KeyboardEvent | MouseEvent) => {
      if (isDialogueFinished) return
      if ((e as KeyboardEvent).code === "Space" || (e as MouseEvent).type === "click") {
        setDialogueIndex((prev) => {
          if (prev < dialogues.length - 1) return prev + 1
          else {
            setIsDialogueFinished(true)
            return prev
          }
        })
      }
    }
    window.addEventListener("keydown", handleNext)
    window.addEventListener("click", handleNext)
    return () => {
      window.removeEventListener("keydown", handleNext)
      window.removeEventListener("click", handleNext)
    }
  }, [isDialogueFinished, dialogues.length])

  const handleValidate = async () => {
    if (answer.trim() !== correctAnswer) {
      alert("Ce n‚Äôest pas la bonne combinaison‚Ä¶ observe bien les symboles et r√©fl√©chis √† leur valeur relative.")
      return
    }
    setIsDialogueFinished(false)
    setDialogueIndex(0)
    setShowQuiz(false)
    setAnswer("")
    setPostPhase(true)
  }

  useEffect(() => {
    if (!postPhase) return
    const handleNextPost = (e: KeyboardEvent | MouseEvent) => {
      if ((e as KeyboardEvent).code === "Space" || (e as MouseEvent).type === "click") {
        setPostDialogueIndex((prev) => {
          if (prev < postAnswerDialogues.length - 1) return prev + 1
          else {
            setShowQuiz(true)
            setPostPhase(false)
            return prev
          }
        })
      }
    }
    window.addEventListener("keydown", handleNextPost)
    window.addEventListener("click", handleNextPost)
    return () => {
      window.removeEventListener("keydown", handleNextPost)
      window.removeEventListener("click", handleNextPost)
    }
  }, [postPhase])

  const handleAnswerQuiz = (option: string) => {
    const current = quiz[quizIndex]
    const isCorrect = option === current.correct
    setFeedback(isCorrect ? "‚úÖ Bonne r√©ponse !" : "‚ùå Mauvaise r√©ponse...")
    if (isCorrect) setScore((prev) => prev + 1)
    setTimeout(() => {
      setFeedback(null)
      if (quizIndex < quiz.length - 1) setQuizIndex((prev) => prev + 1)
      else finishQuiz()
    }, 1500)
  }

  const finishQuiz = async () => {
    setShowCongrats(true)
    const partieId = localStorage.getItem("partieId")
    if (!partieId) return
    setLoading(true)
    try {
      await fetch("/api/enigme/validate", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ partieId: Number.parseInt(partieId), enigmeId: 5 }),
      })
    } catch (error) {
      console.error("Erreur:", error)
    } finally {
      setLoading(false)
    }
  }

  if (showCongrats) {
    return (
      <div
        className="min-h-screen flex flex-col items-center justify-center text-center text-white p-8 space-y-8 bg-cover bg-center"
        style={{
          backgroundImage:
            "url('https://upload.wikimedia.org/wikipedia/commons/8/8d/El_Castillo_Stitch_2008_Edit_1.jpg')",
        }}
      >
        <h1 className="text-4xl font-bold">üéâ F√©licitations ! üéâ</h1>
        <p className="text-xl">
          Tu as perc√© le myst√®re de Chichen Itza et remport√© le quiz maya !<br />
          Tu gagnes la lettre <span className="text-yellow-300 font-bold text-2xl">C</span>.
        </p>

        {/* üó∫Ô∏è Carte interactive de Chichen Itza */}
        <div className="w-full max-w-3xl h-[400px] border-2 border-yellow-400 rounded-2xl overflow-hidden shadow-lg">
          <iframe
            src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3732.9615055016937!2d-88.56872518493556!3d20.6842859865054!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x8f5675a52f0f80b5%3A0x8ad7b2e7a0a3b6cb!2sChichen%20Itza!5e0!3m2!1sfr!2smx!4v1715340497312!5m2!1sfr!2smx"
            width="100%"
            height="100%"
            style={{ border: 0 }}
            allowFullScreen
            loading="lazy"
          ></iframe>
        </div>

        {!showVideo && (
          <Button
            onClick={() => setShowVideo(true)}
            className="bg-yellow-500 hover:bg-yellow-400 text-black w-full max-w-sm py-3"
          >
            Suivant
          </Button>
        )}

        {showVideo && (
          <div className="w-full max-w-3xl aspect-video rounded-xl overflow-hidden border-2 border-yellow-400 shadow-lg">
            <iframe
              width="100%"
              height="100%"
              src={VIDEO_URL}
              title="Vid√©o Chichen Itza"
              allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
              allowFullScreen
            ></iframe>
          </div>
        )}

        {showVideo && (
          <Button
            onClick={() => router.push("/accueil")}
            size="lg"
            className="bg-purple-700 hover:bg-purple-600 mt-4"
          >
            Retour √† l'accueil
          </Button>
        )}
      </div>
    )
  }

  return (
    <div
      className="relative w-screen h-screen bg-cover bg-center flex items-end justify-center text-white"
      style={{
        backgroundImage:
          "url('https://upload.wikimedia.org/wikipedia/commons/8/8d/El_Castillo_Stitch_2008_Edit_1.jpg')",
      }}
    >
      {!isDialogueFinished && !postPhase && !showQuiz && (
        <div className="absolute bottom-8 w-[90%] max-w-4xl bg-black/50 backdrop-blur-sm rounded-xl p-6 border border-yellow-300/20 text-lg text-center">
          {dialogues[dialogueIndex]}
          <p className="text-sm text-gray-300 mt-2">(Espace ou clic pour continuer...)</p>
        </div>
      )}

      {isDialogueFinished && !postPhase && !showQuiz && (
        <div className="absolute bottom-12 w-[90%] max-w-3xl bg-black/60 backdrop-blur-md rounded-xl p-6 border border-yellow-400/30 text-center space-y-4">
          <p className="text-lg mb-2">Entre la combinaison du cadenas :</p>
          <div className="flex justify-center gap-6 flex-wrap mb-4">
            {codedNumbers.map((num, i) => (
              <div key={i} className="bg-white/10 p-4 rounded-lg">
                <p className="text-2xl font-mono text-yellow-300">{num.maya}</p>
              </div>
            ))}
          </div>

          <p className="text-sm italic text-gray-300 mb-2">
            (Indice : la somme des 4 chiffres est √©gale √† <span className="text-yellow-400 font-semibold">26</span>.)
          </p>

          <input
            type="text"
            value={answer}
            onChange={(e) => setAnswer(e.target.value)}
            placeholder="Entrez votre r√©ponse"
            className="p-3 rounded-md text-black w-full max-w-md text-center"
          />

          <Button
            onClick={handleValidate}
            disabled={loading}
            className="w-full max-w-md text-lg py-6 bg-amber-700 hover:bg-amber-600"
          >
            {loading ? "Validation..." : "Valider la r√©ponse"}
          </Button>
        </div>
      )}

      {postPhase && !showQuiz && (
        <div className="absolute bottom-8 w-[90%] max-w-4xl bg-black/50 backdrop-blur-sm rounded-xl p-6 border border-white/10 text-lg leading-relaxed text-center">
          {postAnswerDialogues[postDialogueIndex]}
          <p className="text-sm text-gray-300 mt-2">(Espace ou clic pour continuer...)</p>
        </div>
      )}

      {showQuiz && !showCongrats && (
        <div className="absolute bottom-8 w-[90%] max-w-4xl bg-black/70 backdrop-blur-sm rounded-xl p-6 border border-amber-400/20 text-center space-y-4">
          <h2 className="text-2xl font-bold mb-4">{quiz[quizIndex].question}</h2>
          <div className="grid grid-cols-2 gap-4">
            {quiz[quizIndex].options.map((option, i) => (
              <Button
                key={i}
                onClick={() => handleAnswerQuiz(option)}
                disabled={!!feedback}
                className="bg-amber-700 hover:bg-amber-600 text-lg py-4"
              >
                {option}
              </Button>
            ))}
          </div>
          {feedback && (
            <p
              className={`text-xl font-semibold mt-4 ${
                feedback.includes("Bonne") ? "text-green-400" : "text-red-400"
              }`}
            >
              {feedback}
            </p>
          )}
          <p className="text-sm text-gray-300 mt-3">
            Question {quizIndex + 1} sur {quiz.length}
          </p>
        </div>
      )}

      <img
        src="/img/pedro.png"
        alt="Personnage maya"
        className="absolute bottom-0 right-0 w-[420px] md:w-[480px] select-none pointer-events-none"
      />
    </div>
  )
}
